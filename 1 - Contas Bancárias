class ContaBancaria {
    String cliente;
    int num_conta;
    float saldo;

    public ContaBancaria(String cliente, int num_conta, float saldo) {
        this.cliente = cliente;
        this.num_conta = num_conta;
        this.saldo = saldo;
    }

    public void sacar(float valor) {
        if (valor > saldo) {
            System.out.println("Saldo insuficiente.");
        } else {
            saldo -= valor;
            System.out.println("Saque de R$" + valor + " realizado com sucesso.");
        }
    }

    public void depositar(float valor) {
        saldo += valor;
        System.out.println("Depósito de R$" + valor + " realizado com sucesso.");
    }

    public void mostrarDados() {
        System.out.println("Cliente: " + cliente);
        System.out.println("Número da conta: " + num_conta);
        System.out.println("Saldo: R$" + saldo);
    }
}

class ContaPoupanca extends ContaBancaria {
    int diaRendimento;

    public ContaPoupanca(String cliente, int num_conta, float saldo, int diaRendimento) {
        super(cliente, num_conta, saldo);
        this.diaRendimento = diaRendimento;
    }

    public void calcularNovoSaldo(float taxaRendimento) {
        saldo *= (1 + taxaRendimento / 100);
        System.out.println("Novo saldo após rendimento: R$" + saldo);
    }
}

class ContaEspecial extends ContaBancaria {
    float limite;

    public ContaEspecial(String cliente, int num_conta, float saldo, float limite) {
        super(cliente, num_conta, saldo);
        this.limite = limite;
    }

    @Override
    public void sacar(float valor) {
        if (valor <= saldo + limite) {
            saldo -= valor;
            System.out.println("Saque de R$" + valor + " realizado com sucesso.");
        } else {
            System.out.println("Limite excedido.");
        }
    }
}

public class Contas {
    public static void main(String[] args) {
        ContaPoupanca poupanca = new ContaPoupanca("João", 123, 1000, 5);
        ContaEspecial especial = new ContaEspecial("Maria", 456, 2000, 500);

        poupanca.sacar(500);
        poupanca.calcularNovoSaldo(0.5f);
        especial.sacar(2500);
        especial.sacar(250);
        especial.depositar(1000);

        poupanca.mostrarDados();
        especial.mostrarDados();
    }
}
